// SYNTAX TEST "Packages/Syntax-Highlighting-for-Sass/Syntaxes/SCSS.sublime-syntax"

/*
  block comment #{ function($variable) + "escap\e" + -.5em }
*/

// line comment contains #{ function($variable) + "escap\e" + -.5em }

body
  margin: 0 // line comment


*,
*::before,
*::after


#id-selector,
#id-#{$variable}-selector,
#id-#{$variable}-#{$variable},
#id-#{$variable}-#{$variable}::before

// TODO
#id-selector,#id-#{$variable}-selector,#id-#{$variable}-#{$variable},#id-#{$variable}-#{$variable}::before
#id-selector, #id-#{$variable}-selector, #id-#{$variable}-#{$variable}, #id-#{$variable}-#{$variable}::before

#id:not(body):not(#id):not(.class):not(:first-child):not(#{$variable})


.class-selector,
.class-#{$variable}-selector,
.class-#{$variable}-#{$variable},
.class-#{$variable}-#{$variable}::before

// TODO
.class-selector,.class-#{$variable}-selector,.class-#{$variable}-#{$variable},.class-#{$variable}-#{$variable}::before
.class-selector, .class-#{$variable}-selector, .class-#{$variable}-#{$variable}, .class-#{$variable}-#{$variable}::before

.class:not(body):not(.class):not(.class):not(:first-child):not(#{$variable})


#id.class:nth-of-type(2n)
.class#id:nth-child(2n-1)
.class#id:nth-child(2n+1)
.class#id:nth-child(2n - 1)


#id .class,
#id > .class,
#id ~ .class,
#id + .class


.block
  &__element
  &--modifier
  &--modifier &__elemnet


.selector
  span
  div > span
  div ~ span::before

  // TODO
  + div::after
  div::after


[attr]
a[title]
a[href=""]
a[href=ab-_a123c]
a[href*=""]
a[href^=""]
a[href$=""]
a[data-*=""]
a[data~=""]
a[data|=""]


%placeholder

@extend %placeholder-a1o_321

%#{$variable}-placeholder


::-webkit-selection
::selection


:root
  --css-variable_123: 20px;


$variable: 123px
$variable123: #fff
$va1ri2ab3le-321a: #ABCDEF !default
$_va1ri_2ab3le_321a: inline !important
$variable: function($variable)

// TODO
$map: (width-1: ($key: 200px * $variable #{$variable} 'stirng'))


body
  padding: var(--css-variable_123)
  proprety-#{$variable}: 20px
  #{$var}-proprety: #FFF
  proprety-#{$var}-proprety: value
  property: $variable
  property: sass-function()
  property: translate3d()

  content: "double quoted string"
  content: 'single quoted string'
  content: "broken double quoted string
  content: 'broken single quoted string
  content: "double quoted \escape #{ function($variable) + -.5em }"
  content: 'single quoted \escape #{ function($variable) + -.5em }'

  width: 123px
  width: .123px
  width: -321.123px
  width: -.123px
  width: -#{$number}px
  width: -$variable
  width: -($variable * 2)
  width: 20px+20px

  background: url(../../assets/image.pn
  background: url(../../assets/image.png)
  content: attr(data-att
  content: attr(data-attr)

  // TODO
  background-image: url(if($bootstrap-sass-asset-helper, twbs-image-path("#{$file-1x}"), "#{$file-1x}"))


// TODO
=mixin()
@mixin mixin()
@mixin mixin-123_1eaf2u ($a)

@function function($a, $b, $c...)

+mixin()
@include mixin()
@include mixin-123_1eaf2u

@if not $condition
@else if $condition
@if $condition-a or $condition-b

@media only screen and (max-width: 100px) and (min-width: 50px)
@media only screen and (#{$max-width}: #{$value}) and (#{$min-width}: 50px)

@media print

// Invalid
.selector-1 {}
.selector-2
  width: 20px;